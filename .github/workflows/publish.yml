name: Publish to npm

on:
    release:
        types: [created]
    workflow_dispatch:
        inputs:
            version:
                description: "Version to publish (leave empty to use package.json version)"
                required: false
                type: string

jobs:
    publish:
        runs-on: ubuntu-latest

        environment: npm

        permissions:
            contents: read
            id-token: write

        steps:
            - uses: actions/checkout@v4

            - name: Setup Node.js
              uses: actions/setup-node@v4
              with:
                  node-version: "20.x"
                  registry-url: "https://registry.npmjs.org"

            - name: Enable Corepack
              run: corepack enable

            - name: Get yarn cache directory path
              id: yarn-cache-dir-path
              run: echo "dir=$(yarn config get cacheFolder)" >> $GITHUB_OUTPUT

            - name: Cache yarn dependencies
              uses: actions/cache@v4
              with:
                  path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
                  key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
                  restore-keys: |
                      ${{ runner.os }}-yarn-

            - name: Install dependencies
              run: yarn install --immutable

            - name: Run precommit checks
              run: yarn precommit

            - name: Build
              run: yarn build

            - name: Update version (if manual dispatch with version)
              if: github.event_name == 'workflow_dispatch' && github.event.inputs.version != ''
              run: |
                  npm version ${{ github.event.inputs.version }} --no-git-tag-version
                  echo "Updated version to ${{ github.event.inputs.version }}"

            - name: Publish to npm
              run: npm publish --provenance --access public
              env:
                  NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

            - name: Get published version
              id: version
              run: echo "version=$(node -p "require('./package.json').version")" >> $GITHUB_OUTPUT

            - name: Create Summary
              run: |
                  echo "## ðŸ“¦ Package Published Successfully" >> $GITHUB_STEP_SUMMARY
                  echo "" >> $GITHUB_STEP_SUMMARY
                  echo "**Version:** ${{ steps.version.outputs.version }}" >> $GITHUB_STEP_SUMMARY
                  echo "**Package:** jira-migrate" >> $GITHUB_STEP_SUMMARY
                  echo "" >> $GITHUB_STEP_SUMMARY
                  echo "### Installation" >> $GITHUB_STEP_SUMMARY
                  echo '```bash' >> $GITHUB_STEP_SUMMARY
                  echo "npx jira-migrate@${{ steps.version.outputs.version }}" >> $GITHUB_STEP_SUMMARY
                  echo '```' >> $GITHUB_STEP_SUMMARY
